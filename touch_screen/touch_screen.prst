Linux Touch Screen driver
09:17 11 Nov 2013
Tags: linux, kernel, driver

* 简介

这篇文章分析linux中touch screen的驱动,这里拿s3c2410中的触摸屏作为例子,
主要内容包括:

- 触摸屏原理
- 代码分析

* 原理

当我们按下触摸屏时,我们必须知道所按下的区域的位置,
如果把水平和垂直作为坐标系的话,那么位置信息也就是触摸点的坐标值(x,y).

首先来看下一般阻性触摸屏的构成:

.image construct.gif

触摸屏包含上下叠合的两个透明层阻性材料,中间由一种弹性材料隔开.
当触摸屏表面受到压力时,顶层和底层之间会产生触碰.所用的电阻式触摸屏都采用分压器原理来产生代表X坐标和Y坐标的电压.
如下图所示,分压器是通过将两个电阻进行串联来实现的.
上面的电阻R1连接正参考电压Vref,下面的电阻R2接地.连个电阻连接点处的电压测量值与下面那个电阻的阻值成正比.

.image fenya.gif

这样,根据接触点处的电压值,便可以计算出对应的位置.
当然,如果在触摸屏上进行滑动,那么就会有一系列连续的电压信息,
不过,这些信息是模拟信号,但是计算机只认识数字信息,
所以,必须将这些模拟信号转换成对应的数字信号,所以,
这里还必须利用模数转换器(ADC)的帮忙:

.image adc.gif

* 代码分析

经过上述的分析,我们可以看出,这里有两个关键点,
一个是ADC,一个是坐标信息的反馈.下面我们分别来看.

** ADC

由于并不是触摸屏一个设备可能会使用ADC,
所以每个使用ADC的设备,对于ADC来说就是一个客户端,
所以在 `probe` 函数中会创建一个adc client:

.code s3c2410_ts.c 295,301

看一下它的参数:

.code adc.c 221,227

- `select:` 当开始/结束一次ADC转换时的回调函数
- `conv`: 当获得一个采样点信息时的回调函数
- `is_ts`: 该设备是否为触摸屏,因为触摸屏相对于其他设备有更高的优先级.

先来看 `select` 回调函数:

.code s3c2410_ts.c 216,232

当 `select` 不为0时,表示一次adc转换的开始,
这是只是设置adc的模式.
反之为adc转换的结束,这时需要将计算得出的位置信息通知上层系统.
这里是通过一个定时器来完成的

当每个采样点完成计算时,调用 `conv` 回调函数:

.code s3c2410_ts.c 186,214

可以看出这里只是将得到的坐标值累加.
这样当结束一次adc转换时,最终通知 `input` 子系统的坐标值是一个平均值:

.code s3c2410_ts.c 118,120

下面来看下ADC触发源,这里有2个触发源:

- 当在触摸屏上按下时触发一次adc转换过程
- 一次ADC转换过程的结束

先来看第一个,这里,当在触摸屏上按下时,会触发一个中断
在中断回调函数中,对于非触摸屏设备,会将其挂入到ADC的等待处理队列

.code adc.c 171

如果是触摸屏,由于它具有较高的优先级,
如果adc当前正在处理另一个触摸屏处理请求,那么将直接返回

.code adc.c 160,161

否则,adc将直接处理该请求.

当一次ADC完成一次转换时,同样会触发一个中断,
这里首先判断采样点的个数是否达到要求,如果没有,将继续进行采样:

.code adc.c 314,318

反之,将结束当前的采样,然后开始处理下一个请求:

.code adc.c 319,326

** 信息的反馈

信息的反馈主要是基于linux input子系统,
首先是注册需要反馈的事件的类型,这里主要有位置事件和按键事件

.code s3c2410_ts.c 317,318

以及定义位置信息的范围

.code s3c2410_ts.c 319,320

当在触摸屏上按下时,会同时反馈按下的点的位置事件和一个按键信息:

.code s3c2410_ts.c 125,129

当在触摸屏上释放是,同样会反馈一个按键信息:

.code s3c2410_ts.c 142,143

对于input子系统的相关细节,不在本篇的讨论范围,后续文章会有详解.

FIN.
